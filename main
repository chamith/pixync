#! /bin/bash

push_raw_proj(){

	local src="$prj_dir"
	local trg="$bck_root"
	
	echo "BACKING UP '$prj_name' to '$bck_root'"

	if [ -d "$src" ]; then
		rsync -urtWv --exclude "*.xmp" --exclude "*.db" --exclude "*.conf" --exclude "*.pp3" --exclude ".dtrash" --progress $src $trg --delete
		echo "DONE"
	else
		echo "ERROR: '$src does not exist'"
	fi

}

pull_raw_proj(){

	local src="$bck_root/$prj_name/"
	local trg="$prj_dir/"

	echo "RESTORING '$prj_name' from '$bck_root'"
	
#	if [ -d "sftp://$src" ]; then
		rsync -urtWv --progress $src $trg 
		echo "DONE"
#	else
#		echo "ERROR: '$src does not exist'"
#	fi

}

println(){
	text=$1

	if [ $# -lt 2 ]; then
		color="39m" 
	elif [ $2 == "AMBER" ]; then
		color="33m"
	fi
	
	echo -e "\e[$color$text\e[39m"
}

push_xmp_proj(){

	#local src=$prj_dir
	#local cur_dir=$PWD
	#cd $prj_dir

	echo -e "\e[34mUpdating darktable files of '$prj_name'\e[39m"
	git add *.xmp 
	# git add dt-lib.db 

	echo -e "\e[34mUpdating rawtherepee files of '$prj_name'\e[39m"
	git add *.pp3 

	echo -e "\e[34mUpdating pixync files of '$prj_name'\e[39m"
	git add pixync.conf

	#echo -e "\e[34mUpdating digikam files \e[39m"
	#git add ../digikam4.db

	echo "commiting the changes of $prj_name"
	git commit -m "changes to $prj_name"

	echo -ne "PUSHING TO REMOTE REPO ..."
	git push origin master

	#echo $PWD
	#cd $cur_dir
	echo "DONE"
}

pull_xmp_proj(){
	#local cur_dir=$PWD
	#local src=$prj_dir

	#cd $prj_dir
	echo "pulling the remote changes in 'bitbucket' to local repo"
	git pull origin master
	#cd $cur_dir
}

clean(){
	# img
	echo "removing content of img/raw"
	rm $prj_dir/img/raw/*.CR2
	
	echo "removing content of img/prc"
	rm $prj_dir/img/prc/*

	echo "removing content of vid/raw"
	rm $prj_dir/vid/raw/*.MOV

	echo "removing content of vid/prc"
	rm $prj_dir/vid/prc/*
}

update(){
	echo -n "updating pixync ..."
	cp /cygdrive/c/Users/Chamith/OneDrive/pixync* /cygdrive/c/cygwin64/bin/
	echo "DONE"
}

create_proj(){
	pixync_home=$HOME/Pictures
	prj_name=$1
	prj_root=${2%/}
	prj_dir=$prj_root/$prj_name
	mnt_point=$(stat -c '%m' $prj_root)
	prj_path=${prj_root/$mnt_point/}/$prj_name
	dev_uuid=$(findmnt -n -o UUID $mnt_point)

	echo "Mount Point $mnt_point"
	echo "Pixync Home $pixync_home"
	echo "Project Name: $prj_name"
	echo "Project Directory: $prj_dir"
	echo "Project Path on the Device: $prj_path"
	echo "Device ID: $dev_uuid"
	
	ln -s $prj_dir $pixync_home/$prj_name
	mkdir $prj_dir $prj_dir/img $prj_dir/img/raw $prj_dir/img/prc $prj_dir/vid $prj_dir/vid/raw $prj_dir/vid/prc $prj_dir/tmp
	create_git_repo
#	sqlite3 $pixync_home/digikam4.db <<EOS
#		INSERT INTO AlbumRoots (label, status, type, identifier, specificPath)
#		VALUES ('$prj_name', 0, 2, 'volumeid:?uuid=$dev_uuid', '$prj_path');
#	
#EOS
}

create_git_repo(){
	git init $prj_dir
	cd $prj_dir && git remote add origin chamith@kalutara:pictures/$prj_name/.git
}

open_proj(){

	echo "opening the catalog file $prj_name"
	darktable --library $prj_dir/dt-lib.db $prj_dir/img/raw

}

open_proj_rt(){

	echo "opening raw therapee for $prj_name"
	rawtherapee $prj_dir/img/raw

}
set_params(){
	pixync_home=~/Pictures
	conf_file_name="pixync.conf"
	prj_dir=${1%/}

	if [ -L ${prj_dir} ] ; then
   		if [ -e ${prj_dir} ] ; then
			echo "Symbolic Link"
			prj_dir=$(readlink -f $prj_dir)
   		else
      			echo "Broken link"
   		fi
	elif [ -e ${prj_dir} ] ; then
   		echo "Not a link"
	else
   		echo "Missing"
	fi

	prj_name=$(basename ${1%/})
	prm_root=$(dirname ${1%/})


	prj_conf_file=$prj_dir/$conf_file_name

	if [ ! -e "$prj_conf_file" ]; then
	    	echo $conf_file_name" file does not exist"
		echo "setting up the default value"
		bck_root=kalutara:pictures
	else 
		echo $conf_file_name" file exists"

		IFS="="
		while read -r name value
		do
			if [ "$name" = "backup" ]; then
				bck_root=${value%/}
			fi
		done < $prj_conf_file
	fi 

	prj_bck_dir=$bck_root/$prj_name

	echo "Project Name: $prj_name"
	echo "Backup Root: $bck_root"
	echo "Project Primary Directory: $prj_dir"
	echo "Project Backup Directory: $prj_bck_dir"
}

case $1 in
	"create" )
		create_proj $2 $3
	;;
	"create_git_repo" )
		set_params $2
		create_git_repo 		
	;;
	"update" )
		update
	;;
	"import" ) 
		set_params $3
		/usr/lib/pixync/import $2 $prm_root/$3
	;;
	"open" )
		set_params $2
		pull_raw_proj
		pull_xmp_proj
		open_proj
		push_xmp_proj
		push_raw_proj
	;;
	"open_rt" )
		set_params $2
		pull_raw_proj
		pull_xmp_proj
		open_proj_rt
		push_xmp_proj
		push_raw_proj
	;;
	"push" ) 
		set_params $2
		push_xmp_proj
		push_raw_proj
	;;
	"pull" ) 
		set_params $2
		pull_raw_proj
		pull_xmp_proj
	;;
	"clean" )
		set_params $2
		push_xmp_proj
		push_raw_proj		
		clean $3
		;;
	*)
	echo "Welcome to Pixync - your ultimate image management suite"
	println "TEST MESSAGE" "AMBER"
	echo "---- USAGE ----"
	echo "import <camera_storage>: imports images from your camera storage"
	echo "push: [backup_storage] pushes images from your primary storage to the backup storage"
	;;
esac
