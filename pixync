#! /bin/bash

push_raw_proj(){

	local src="$prm_root/$prj_name"
	local trg="$bck_root"
	
	echo "BACKING UP '$prj_name' to '$bck_root'"

	if [ -d "$src" ]; then
		rsync -urtWv --exclude "*.xmp" --exclude "*.db" --exclude "*.conf" --exclude "*.pp3" --progress $src $trg
		echo "DONE"
	else
		echo "ERROR: '$src does not exist'"
	fi

}

pull_raw_proj(){

	local src="$bck_root/$prj_name"
	local trg="$prm_root/"

	echo "RESTORING '$prj_name' from '$bck_root'"
	
#	if [ -d "sftp://$src" ]; then
		rsync -urtWv --progress $src $trg 
		echo "DONE"
#	else
#		echo "ERROR: '$src does not exist'"
#	fi

}

println(){
	text=$1

	if [ $# -lt 2 ]; then
		color="39m" 
	elif [ $2 == "AMBER" ]; then
		color="33m"
	fi
	
	echo -e "\e[$color$text\e[39m"
}

push_xmp_proj(){

	local src=$prj_prm_dir
	local cur_dir=$PWD
	cd $prj_prm_dir

	echo -e "\e[34mUPDATING XMP FILES OF '$prj_name'\e[39m"
	git add *.conf *.xmp *.pp3 *.db 

	echo "commiting the changes of $prj_name"
	git commit -m "changes to $prj_name"

	echo -ne "PUSHING TO REMOTE REPO ..."
	git push origin master

	echo $PWD
	cd $cur_dir
	echo "DONE"
}

pull_cache(){
	
	if [ ! -z $scope -a $scope!=" " ]; then
		pull_cache_proj $scope
	else
		for dir in $ssd_root/*
		do
			if [ -d "$dir" ]
			then
				pull_cache_proj ${dir##*/}
			fi
		done
	fi
}

pull_raw(){

	echo "pulling the remote changes in 'kalutara' to local repo"
	#git pull kalutara master

	if [ ! -z $prj_prm_dir -a $prj_prm_dir!=" " ]; then
	        pull_nas_proj $prj_name
	else
        for dir in $prm_root/*
        do
                if [ -d $dir ]
                then
                    pull_raw_proj $prj_name
                fi
        done
	fi
}

pull_xmp_proj(){
	local cur_dir=$PWD
	local src=$prj_prm_dir

	cd $prj_prm_dir
	echo "pulling the remote changes in 'bitbucket' to local repo"
	git pull origin master
	cd $cur_dir
}

clean(){
	# img
	echo "removing content of img/raw"
	rm $prj_prm_dir/img/raw/*.CR2
	
	echo "removing content of img/prc"
	rm $prj_prm_dir/img/prc/*

	echo "removing content of vid/raw"
	rm $prj_prm_dir/vid/raw/*.MOV

	echo "removing content of vid/prc"
	rm $prj_prm_dir/vid/prc/*
}

update(){
	echo -n "updating pixync ..."
	cp /cygdrive/c/Users/Chamith/OneDrive/pixync* /cygdrive/c/cygwin64/bin/
	echo "DONE"
}

open_proj(){

	local prj_dir=$prm_root/$prj_name

	#pull_remote
	#pull_nas
	#pull_cache

	echo "opening the catalog file $prj_name"
	darktable --library $prj_dir/dt-lib.db $prj_dir/img/raw

}

set_params(){
	conf_file_name="pixync.conf"
	prj_name=$(basename ${1%/})
	prm_root=$(dirname ${1%/})
	prj_prm_dir=${1%/}

	prj_conf_file=$prj_prm_dir/$conf_file_name

	if [ ! -e "$prj_conf_file" ]; then
	    	echo $conf_file_name" file does not exist"
		echo "setting up the default value"
		bck_root=/nowhere
	else 
		echo $conf_file_name" file exists"

		IFS="="
		while read -r name value
		do
			if [ "$name" = "backup" ]; then
				bck_root=${value%/}
			fi
		done < $prj_conf_file
	fi 

	prj_bck_dir=$bck_root/$prj_name

	echo "Project Name: $prj_name"
	echo "Backup Root: $bck_root"
	echo "Project Primary Directory: $prj_prm_dir"
	echo "Project Backup Directory: $prj_bck_dir"
}

case $1 in
	"update" )
		update
	;;
	"import" ) 
		set_params $3
		pixync_import $2 $prm_root/$3
	;;
	"open" )
		set_params $2
		pull_raw_proj
		pull_xmp_proj
		open_proj
		push_xmp_proj
		push_raw_proj
	;;
	"push" ) 
		set_params $2
		push_xmp_proj
		push_raw_proj
	;;
	"pull" ) 
		set_params $2
		pull_raw_proj
		pull_xmp_proj
	;;
	"clean" )
		set_params $2
		push_xmp_proj
		push_raw_proj		
		clean $3
		;;
	*)
	echo "Welcome to Pixync - your ultimate image management suite"
	println "TEST MESSAGE" "AMBER"
	echo "---- USAGE ----"
	echo "import <camera_storage>: imports images from your camera storage"
	echo "push: [backup_storage] pushes images from your primary storage to the backup storage"
	;;
esac
